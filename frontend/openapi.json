{
  "openapi": "3.1.0",
  "info": {
    "title": "utoipa-axum",
    "description": "Utoipa's axum bindings for seamless integration for the two",
    "contact": {
      "name": "Juha Kukkonen",
      "email": "juha7kukkonen@gmail.com"
    },
    "license": {
      "name": "MIT OR Apache-2.0",
      "identifier": "MIT OR Apache-2.0"
    },
    "version": "0.2.0"
  },
  "paths": {
    "/api/authenticate": {
      "get": {
        "operationId": "authenticate_handler",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Authenticate a member successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/login": {
      "get": {
        "operationId": "login_handler",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Log in a member successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/members/{member_id}": {
      "get": {
        "operationId": "get_member_handler",
        "parameters": [
          {
            "name": "member_id",
            "in": "path",
            "description": "ID of the member to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get a member successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/members/{member_id}/friend-requests": {
      "get": {
        "operationId": "list_inbound_friend_requests_handler",
        "parameters": [
          {
            "name": "member_id",
            "in": "path",
            "description": "ID of the member to fetch friend requests for",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List inbound friend requests of a member successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Member"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "operationId": "create_friend_request_handler",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FriendRequestInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Create a friend request successfully",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/members/{member_id}/friend-requests/{friend_member_id}/accept": {
      "post": {
        "operationId": "accept_friend_request_handler",
        "parameters": [
          {
            "name": "member_id",
            "in": "path",
            "description": "ID of the member accepting the request",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "friend_member_id",
            "in": "path",
            "description": "ID of the friend request to accept",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Accept a friend request successfully",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/members/{member_id}/friends": {
      "get": {
        "operationId": "list_friends_handler",
        "parameters": [
          {
            "name": "member_id",
            "in": "path",
            "description": "ID of the member to fetch friends for",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List friends of a member successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Member"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/members/{member_id}/pools/{pool_id}/expenses/{expense_id}": {
      "get": {
        "operationId": "get_expense_handler",
        "parameters": [
          {
            "name": "member_id",
            "in": "path",
            "description": "ID of the member to fetch expenses for",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "pool_id",
            "in": "path",
            "description": "ID of the pool to fetch expenses for",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "expense_id",
            "in": "path",
            "description": "ID of the expense to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get expenses",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Expense"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/members/{member_id}/pools/{pool_id}/members": {
      "get": {
        "operationId": "list_members_of_pool_handler",
        "parameters": [
          {
            "name": "pool_id",
            "in": "path",
            "description": "ID of the pool to fetch members for",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "member_id",
            "in": "path",
            "description": "ID of the member to fetch members for",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List all members of a pool successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MembersWithPoolStatus"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/pools": {
      "post": {
        "operationId": "create_pool_handler",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PoolInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Create a pool successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pool"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/pools/{pool_id}": {
      "get": {
        "operationId": "get_pool_details_handler",
        "parameters": [
          {
            "name": "pool_id",
            "in": "path",
            "description": "ID of the pool to fetch details for",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "member_id",
            "in": "query",
            "description": "ID of the member to fetch details for",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create expense",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PoolDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/pools/{pool_id}/expenses": {
      "post": {
        "operationId": "add_expense_handler",
        "parameters": [
          {
            "name": "pool_id",
            "in": "path",
            "description": "ID of the pool to add expense to",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Create expense",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Expense"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/pools/{pool_id}/members": {
      "post": {
        "operationId": "add_friend_to_pool_handler",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PoolMembershipInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Add a friend to a pool successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PoolMembership"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/pools/{pool_id}/members/{member_id}": {
      "delete": {
        "operationId": "remove_friend_from_pool_handler",
        "parameters": [
          {
            "name": "pool_id",
            "in": "path",
            "description": "ID of the pool",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "member_id",
            "in": "path",
            "description": "ID of the member to remove",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Remove a friend from a pool successfully",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/pools/{pool_id}/members/{member_id}/expenses": {
      "post": {
        "operationId": "get_pool_recent_expenses_handler",
        "parameters": [
          {
            "name": "pool_id",
            "in": "path",
            "description": "ID of the pool to fetch expenses for",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "member_id",
            "in": "path",
            "description": "ID of the member to fetch expenses for",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit the number of expenses returned",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create expense",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecentExpenseDetails"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/pools/{pool_id}/memberships": {
      "post": {
        "operationId": "create_pool_membership_handler",
        "parameters": [
          {
            "name": "pool_id",
            "in": "path",
            "description": "ID of the pool to create membership for",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "member_id",
            "in": "query",
            "description": "ID of the member to create membership for",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create pool membership",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PoolMembership"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/signup": {
      "post": {
        "operationId": "signup_handler",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Get expenses",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthInput": {
        "type": "object",
        "required": [
          "id",
          "token"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "token": {
            "type": "string"
          }
        }
      },
      "AuthResult": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "id",
              "token",
              "is_authenticated",
              "expires_at"
            ],
            "properties": {
              "expires_at": {
                "type": "string",
                "format": "date-time"
              },
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "is_authenticated": {
                "type": "boolean"
              },
              "token": {
                "type": "string"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "is_authenticated"
            ],
            "properties": {
              "expires_at": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "id": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "uuid"
              },
              "is_authenticated": {
                "type": "boolean"
              },
              "token": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        ]
      },
      "Expense": {
        "type": "object",
        "required": [
          "id",
          "name",
          "amount",
          "is_settled",
          "inserted_at",
          "updated_at",
          "pool_id",
          "paid_by_member_id",
          "category"
        ],
        "properties": {
          "amount": {
            "type": "number",
            "format": "double"
          },
          "category": {
            "$ref": "#/components/schemas/ExpenseCategory"
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "inserted_at": {
            "type": "string",
            "format": "date-time"
          },
          "is_settled": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "notes": {
            "type": [
              "string",
              "null"
            ]
          },
          "paid_by_member_id": {
            "type": "string",
            "format": "uuid"
          },
          "pool_id": {
            "type": "string",
            "format": "uuid"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ExpenseCategory": {
        "type": "string",
        "enum": [
          "FoodDining",
          "Groceries",
          "Transportation",
          "HousingRent",
          "Utilities",
          "Healthcare",
          "Entertainment",
          "Shopping",
          "Education",
          "Travel",
          "PersonalCare",
          "Fitness",
          "Subscriptions",
          "BillsPayments",
          "BusinessExpenses",
          "Investments",
          "Insurance",
          "Gifts",
          "Charity",
          "Miscellaneous"
        ]
      },
      "ExpenseInput": {
        "type": "object",
        "required": [
          "paid_by_member_id",
          "pool_id",
          "name",
          "amount",
          "line_items",
          "category"
        ],
        "properties": {
          "amount": {
            "type": "number",
            "format": "double"
          },
          "category": {
            "type": "string"
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "line_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpenseLineItem"
            }
          },
          "name": {
            "type": "string"
          },
          "paid_by_member_id": {
            "type": "string",
            "format": "uuid"
          },
          "pool_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "ExpenseLineItem": {
        "type": "object",
        "required": [
          "debtor_member_id",
          "amount"
        ],
        "properties": {
          "amount": {
            "type": "number",
            "format": "double"
          },
          "debtor_member_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "FriendRequestInput": {
        "type": "object",
        "required": [
          "friend_email"
        ],
        "properties": {
          "friend_email": {
            "type": "string"
          }
        }
      },
      "LoginInput": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "Member": {
        "type": "object",
        "required": [
          "id",
          "first_name",
          "last_name",
          "email",
          "inserted_at",
          "updated_at"
        ],
        "properties": {
          "bio": {
            "type": [
              "string",
              "null"
            ]
          },
          "email": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "inserted_at": {
            "type": "string",
            "format": "date-time"
          },
          "last_name": {
            "type": "string"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "MembersWithPoolStatus": {
        "type": "object",
        "required": [
          "member",
          "is_pool_member"
        ],
        "properties": {
          "is_pool_member": {
            "type": "boolean"
          },
          "member": {
            "$ref": "#/components/schemas/Member"
          }
        }
      },
      "Pool": {
        "type": "object",
        "required": [
          "id",
          "name",
          "inserted_at",
          "updated_at"
        ],
        "properties": {
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "inserted_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PoolDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Pool"
          },
          {
            "type": "object",
            "properties": {
              "total_debt": {
                "type": [
                  "number",
                  "null"
                ],
                "format": "double"
              }
            }
          }
        ]
      },
      "PoolInput": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "name": {
            "type": "string"
          }
        }
      },
      "PoolMembership": {
        "type": "object",
        "required": [
          "id",
          "pool_id",
          "member_id",
          "role",
          "inserted_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "inserted_at": {
            "type": "string",
            "format": "date-time"
          },
          "member_id": {
            "type": "string",
            "format": "uuid"
          },
          "pool_id": {
            "type": "string",
            "format": "uuid"
          },
          "role": {
            "$ref": "#/components/schemas/PoolRole"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PoolMembershipInput": {
        "type": "object",
        "required": [
          "member_id"
        ],
        "properties": {
          "member_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "PoolRole": {
        "type": "string",
        "enum": [
          "PARTICIPANT",
          "ADMIN"
        ]
      },
      "RecentExpenseDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Expense"
          },
          {
            "type": "object",
            "required": [
              "line_amount"
            ],
            "properties": {
              "line_amount": {
                "type": "number",
                "format": "double"
              }
            }
          }
        ]
      },
      "SignupInput": {
        "type": "object",
        "required": [
          "first_name",
          "last_name",
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      }
    }
  }
}
